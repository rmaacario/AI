Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> pddl
Rule 1     pddl -> domain
Rule 2     pddl -> problem
Rule 3     domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
Rule 4     problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
Rule 5     domain_def -> LPAREN DOMAIN_KEY NAME RPAREN
Rule 6     problem_def -> LPAREN PROBLEM_KEY NAME RPAREN
Rule 7     objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN
Rule 8     init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 9     init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN
Rule 10    goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 11    require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
Rule 12    require_key_lst -> require_key require_key_lst
Rule 13    require_key_lst -> require_key
Rule 14    require_key -> STRIPS_KEY
Rule 15    require_key -> EQUALITY_KEY
Rule 16    require_key -> TYPING_KEY
Rule 17    types_def -> LPAREN TYPES_KEY names_lst RPAREN
Rule 18    predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN
Rule 19    predicate_def_lst -> predicate_def predicate_def_lst
Rule 20    predicate_def_lst -> predicate_def
Rule 21    predicate_def -> LPAREN NAME typed_variables_lst RPAREN
Rule 22    predicate_def -> LPAREN NAME RPAREN
Rule 23    action_def_lst -> action_def action_def_lst
Rule 24    action_def_lst -> action_def
Rule 25    action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN
Rule 26    parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
Rule 27    parameters_def -> PARAMETERS_KEY LPAREN RPAREN
Rule 28    action_def_body -> precond_def effects_def
Rule 29    precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN
Rule 30    precond_def -> PRECONDITION_KEY literal
Rule 31    effects_def -> EFFECT_KEY LPAREN AND_KEY literals_lst RPAREN
Rule 32    effects_def -> EFFECT_KEY literal
Rule 33    literals_lst -> literal literals_lst
Rule 34    literals_lst -> literal
Rule 35    literal -> LPAREN NOT_KEY predicate RPAREN
Rule 36    literal -> predicate
Rule 37    ground_predicates_lst -> ground_predicate ground_predicates_lst
Rule 38    ground_predicates_lst -> ground_predicate
Rule 39    predicate -> LPAREN NAME variables_lst RPAREN
Rule 40    predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN
Rule 41    predicate -> LPAREN NAME RPAREN
Rule 42    ground_predicate -> LPAREN NAME constants_lst RPAREN
Rule 43    ground_predicate -> LPAREN NAME RPAREN
Rule 44    typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst
Rule 45    typed_constants_lst -> constants_lst HYPHEN type
Rule 46    typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst
Rule 47    typed_variables_lst -> variables_lst HYPHEN type
Rule 48    constants_lst -> constant constants_lst
Rule 49    constants_lst -> constant
Rule 50    variables_lst -> VARIABLE variables_lst
Rule 51    variables_lst -> VARIABLE
Rule 52    names_lst -> NAME names_lst
Rule 53    names_lst -> NAME
Rule 54    type -> NAME
Rule 55    constant -> NAME

Terminals, with rules where they appear

ACTION_KEY           : 25
AND_KEY              : 8 10 29 31
DEFINE_KEY           : 3 4
DOMAIN_KEY           : 5
EFFECT_KEY           : 31 32
EQUALITY_KEY         : 15
EQUALS               : 40
GOAL_KEY             : 10
HYPHEN               : 44 45 46 47
INIT_KEY             : 8 9
LPAREN               : 3 4 5 6 7 8 8 9 10 10 11 17 18 21 22 25 26 27 29 31 35 39 40 41 42 43
NAME                 : 5 6 21 22 25 39 41 42 43 52 53 54 55
NOT_KEY              : 35
OBJECTS_KEY          : 7
PARAMETERS_KEY       : 26 27
PRECONDITION_KEY     : 29 30
PREDICATES_KEY       : 18
PROBLEM_KEY          : 6
REQUIREMENTS_KEY     : 11
RPAREN               : 3 4 5 6 7 8 8 9 10 10 11 17 18 21 22 25 26 27 29 31 35 39 40 41 42 43
STRIPS_KEY           : 14
TYPES_KEY            : 17
TYPING_KEY           : 16
VARIABLE             : 40 40 50 51
error                : 

Nonterminals, with rules where they appear

action_def           : 23 24
action_def_body      : 25
action_def_lst       : 3 23
constant             : 48 49
constants_lst        : 42 44 45 48
domain               : 1
domain_def           : 3 4
effects_def          : 28
goal_def             : 4
ground_predicate     : 37 38
ground_predicates_lst : 8 9 10 37
init_def             : 4
literal              : 30 32 33 34
literals_lst         : 29 31 33
names_lst            : 17 52
objects_def          : 4
parameters_def       : 25
pddl                 : 0
precond_def          : 28
predicate            : 35 36
predicate_def        : 19 20
predicate_def_lst    : 18 19
predicates_def       : 3
problem              : 2
problem_def          : 4
require_def          : 3
require_key          : 12 13
require_key_lst      : 11 12
type                 : 44 45 46 47
typed_constants_lst  : 7 44
typed_variables_lst  : 21 26 46
types_def            : 3
variables_lst        : 39 46 47 50

Parsing method: LALR

state 0

    (0) S' -> . pddl
    (1) pddl -> . domain
    (2) pddl -> . problem
    (3) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (4) problem -> . LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN

    LPAREN          shift and go to state 4

    pddl                           shift and go to state 1
    domain                         shift and go to state 2
    problem                        shift and go to state 3

state 1

    (0) S' -> pddl .



state 2

    (1) pddl -> domain .

    $end            reduce using rule 1 (pddl -> domain .)


state 3

    (2) pddl -> problem .

    $end            reduce using rule 2 (pddl -> problem .)


state 4

    (3) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (4) problem -> LPAREN . DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN

    DEFINE_KEY      shift and go to state 5


state 5

    (3) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def predicates_def action_def_lst RPAREN
    (4) problem -> LPAREN DEFINE_KEY . problem_def domain_def objects_def init_def goal_def RPAREN
    (5) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN
    (6) problem_def -> . LPAREN PROBLEM_KEY NAME RPAREN

    LPAREN          shift and go to state 6

    domain_def                     shift and go to state 7
    problem_def                    shift and go to state 8

state 6

    (5) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN
    (6) problem_def -> LPAREN . PROBLEM_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9
    PROBLEM_KEY     shift and go to state 10


state 7

    (3) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def predicates_def action_def_lst RPAREN
    (11) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN

    LPAREN          shift and go to state 11

    require_def                    shift and go to state 12

state 8

    (4) problem -> LPAREN DEFINE_KEY problem_def . domain_def objects_def init_def goal_def RPAREN
    (5) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN

    LPAREN          shift and go to state 13

    domain_def                     shift and go to state 14

state 9

    (5) domain_def -> LPAREN DOMAIN_KEY . NAME RPAREN

    NAME            shift and go to state 15


state 10

    (6) problem_def -> LPAREN PROBLEM_KEY . NAME RPAREN

    NAME            shift and go to state 16


state 11

    (11) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN

    REQUIREMENTS_KEY shift and go to state 17


state 12

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def predicates_def action_def_lst RPAREN
    (17) types_def -> . LPAREN TYPES_KEY names_lst RPAREN

    LPAREN          shift and go to state 18

    types_def                      shift and go to state 19

state 13

    (5) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9


state 14

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def . objects_def init_def goal_def RPAREN
    (7) objects_def -> . LPAREN OBJECTS_KEY typed_constants_lst RPAREN

    LPAREN          shift and go to state 20

    objects_def                    shift and go to state 21

state 15

    (5) domain_def -> LPAREN DOMAIN_KEY NAME . RPAREN

    RPAREN          shift and go to state 22


state 16

    (6) problem_def -> LPAREN PROBLEM_KEY NAME . RPAREN

    RPAREN          shift and go to state 23


state 17

    (11) require_def -> LPAREN REQUIREMENTS_KEY . require_key_lst RPAREN
    (12) require_key_lst -> . require_key require_key_lst
    (13) require_key_lst -> . require_key
    (14) require_key -> . STRIPS_KEY
    (15) require_key -> . EQUALITY_KEY
    (16) require_key -> . TYPING_KEY

    STRIPS_KEY      shift and go to state 26
    EQUALITY_KEY    shift and go to state 27
    TYPING_KEY      shift and go to state 28

    require_key_lst                shift and go to state 24
    require_key                    shift and go to state 25

state 18

    (17) types_def -> LPAREN . TYPES_KEY names_lst RPAREN

    TYPES_KEY       shift and go to state 29


state 19

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . predicates_def action_def_lst RPAREN
    (18) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 30

    predicates_def                 shift and go to state 31

state 20

    (7) objects_def -> LPAREN . OBJECTS_KEY typed_constants_lst RPAREN

    OBJECTS_KEY     shift and go to state 32


state 21

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def . init_def goal_def RPAREN
    (8) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN

    LPAREN          shift and go to state 33

    init_def                       shift and go to state 34

state 22

    (5) domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .

    LPAREN          reduce using rule 5 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)


state 23

    (6) problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .

    LPAREN          reduce using rule 6 (problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .)


state 24

    (11) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst . RPAREN

    RPAREN          shift and go to state 35


state 25

    (12) require_key_lst -> require_key . require_key_lst
    (13) require_key_lst -> require_key .
    (12) require_key_lst -> . require_key require_key_lst
    (13) require_key_lst -> . require_key
    (14) require_key -> . STRIPS_KEY
    (15) require_key -> . EQUALITY_KEY
    (16) require_key -> . TYPING_KEY

    RPAREN          reduce using rule 13 (require_key_lst -> require_key .)
    STRIPS_KEY      shift and go to state 26
    EQUALITY_KEY    shift and go to state 27
    TYPING_KEY      shift and go to state 28

    require_key                    shift and go to state 25
    require_key_lst                shift and go to state 36

state 26

    (14) require_key -> STRIPS_KEY .

    STRIPS_KEY      reduce using rule 14 (require_key -> STRIPS_KEY .)
    EQUALITY_KEY    reduce using rule 14 (require_key -> STRIPS_KEY .)
    TYPING_KEY      reduce using rule 14 (require_key -> STRIPS_KEY .)
    RPAREN          reduce using rule 14 (require_key -> STRIPS_KEY .)


state 27

    (15) require_key -> EQUALITY_KEY .

    STRIPS_KEY      reduce using rule 15 (require_key -> EQUALITY_KEY .)
    EQUALITY_KEY    reduce using rule 15 (require_key -> EQUALITY_KEY .)
    TYPING_KEY      reduce using rule 15 (require_key -> EQUALITY_KEY .)
    RPAREN          reduce using rule 15 (require_key -> EQUALITY_KEY .)


state 28

    (16) require_key -> TYPING_KEY .

    STRIPS_KEY      reduce using rule 16 (require_key -> TYPING_KEY .)
    EQUALITY_KEY    reduce using rule 16 (require_key -> TYPING_KEY .)
    TYPING_KEY      reduce using rule 16 (require_key -> TYPING_KEY .)
    RPAREN          reduce using rule 16 (require_key -> TYPING_KEY .)


state 29

    (17) types_def -> LPAREN TYPES_KEY . names_lst RPAREN
    (52) names_lst -> . NAME names_lst
    (53) names_lst -> . NAME

    NAME            shift and go to state 38

    names_lst                      shift and go to state 37

state 30

    (18) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    PREDICATES_KEY  shift and go to state 39


state 31

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def . action_def_lst RPAREN
    (23) action_def_lst -> . action_def action_def_lst
    (24) action_def_lst -> . action_def
    (25) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN

    LPAREN          shift and go to state 40

    action_def_lst                 shift and go to state 41
    action_def                     shift and go to state 42

state 32

    (7) objects_def -> LPAREN OBJECTS_KEY . typed_constants_lst RPAREN
    (44) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (45) typed_constants_lst -> . constants_lst HYPHEN type
    (48) constants_lst -> . constant constants_lst
    (49) constants_lst -> . constant
    (55) constant -> . NAME

    NAME            shift and go to state 46

    typed_constants_lst            shift and go to state 43
    constants_lst                  shift and go to state 44
    constant                       shift and go to state 45

state 33

    (8) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN

    INIT_KEY        shift and go to state 47


state 34

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def . goal_def RPAREN
    (10) goal_def -> . LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 48

    goal_def                       shift and go to state 49

state 35

    (11) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .

    LPAREN          reduce using rule 11 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)


state 36

    (12) require_key_lst -> require_key require_key_lst .

    RPAREN          reduce using rule 12 (require_key_lst -> require_key require_key_lst .)


state 37

    (17) types_def -> LPAREN TYPES_KEY names_lst . RPAREN

    RPAREN          shift and go to state 50


state 38

    (52) names_lst -> NAME . names_lst
    (53) names_lst -> NAME .
    (52) names_lst -> . NAME names_lst
    (53) names_lst -> . NAME

    RPAREN          reduce using rule 53 (names_lst -> NAME .)
    NAME            shift and go to state 38

    names_lst                      shift and go to state 51

state 39

    (18) predicates_def -> LPAREN PREDICATES_KEY . predicate_def_lst RPAREN
    (19) predicate_def_lst -> . predicate_def predicate_def_lst
    (20) predicate_def_lst -> . predicate_def
    (21) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (22) predicate_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 52

    predicate_def_lst              shift and go to state 53
    predicate_def                  shift and go to state 54

state 40

    (25) action_def -> LPAREN . ACTION_KEY NAME parameters_def action_def_body RPAREN

    ACTION_KEY      shift and go to state 55


state 41

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 56


state 42

    (23) action_def_lst -> action_def . action_def_lst
    (24) action_def_lst -> action_def .
    (23) action_def_lst -> . action_def action_def_lst
    (24) action_def_lst -> . action_def
    (25) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN

    RPAREN          reduce using rule 24 (action_def_lst -> action_def .)
    LPAREN          shift and go to state 40

    action_def                     shift and go to state 42
    action_def_lst                 shift and go to state 57

state 43

    (7) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 58


state 44

    (44) typed_constants_lst -> constants_lst . HYPHEN type typed_constants_lst
    (45) typed_constants_lst -> constants_lst . HYPHEN type

    HYPHEN          shift and go to state 59


state 45

    (48) constants_lst -> constant . constants_lst
    (49) constants_lst -> constant .
    (48) constants_lst -> . constant constants_lst
    (49) constants_lst -> . constant
    (55) constant -> . NAME

    HYPHEN          reduce using rule 49 (constants_lst -> constant .)
    RPAREN          reduce using rule 49 (constants_lst -> constant .)
    NAME            shift and go to state 46

    constant                       shift and go to state 45
    constants_lst                  shift and go to state 60

state 46

    (55) constant -> NAME .

    NAME            reduce using rule 55 (constant -> NAME .)
    HYPHEN          reduce using rule 55 (constant -> NAME .)
    RPAREN          reduce using rule 55 (constant -> NAME .)


state 47

    (8) init_def -> LPAREN INIT_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> LPAREN INIT_KEY . ground_predicates_lst RPAREN
    (37) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (38) ground_predicates_lst -> . ground_predicate
    (42) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (43) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 61

    ground_predicates_lst          shift and go to state 62
    ground_predicate               shift and go to state 63

state 48

    (10) goal_def -> LPAREN . GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    GOAL_KEY        shift and go to state 64


state 49

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def . RPAREN

    RPAREN          shift and go to state 65


state 50

    (17) types_def -> LPAREN TYPES_KEY names_lst RPAREN .

    LPAREN          reduce using rule 17 (types_def -> LPAREN TYPES_KEY names_lst RPAREN .)


state 51

    (52) names_lst -> NAME names_lst .

    RPAREN          reduce using rule 52 (names_lst -> NAME names_lst .)


state 52

    (21) predicate_def -> LPAREN . NAME typed_variables_lst RPAREN
    (22) predicate_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 66


state 53

    (18) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst . RPAREN

    RPAREN          shift and go to state 67


state 54

    (19) predicate_def_lst -> predicate_def . predicate_def_lst
    (20) predicate_def_lst -> predicate_def .
    (19) predicate_def_lst -> . predicate_def predicate_def_lst
    (20) predicate_def_lst -> . predicate_def
    (21) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (22) predicate_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 20 (predicate_def_lst -> predicate_def .)
    LPAREN          shift and go to state 52

    predicate_def                  shift and go to state 54
    predicate_def_lst              shift and go to state 68

state 55

    (25) action_def -> LPAREN ACTION_KEY . NAME parameters_def action_def_body RPAREN

    NAME            shift and go to state 69


state 56

    (3) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 3 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .)


state 57

    (23) action_def_lst -> action_def action_def_lst .

    RPAREN          reduce using rule 23 (action_def_lst -> action_def action_def_lst .)


state 58

    (7) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 7 (objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .)


state 59

    (44) typed_constants_lst -> constants_lst HYPHEN . type typed_constants_lst
    (45) typed_constants_lst -> constants_lst HYPHEN . type
    (54) type -> . NAME

    NAME            shift and go to state 71

    type                           shift and go to state 70

state 60

    (48) constants_lst -> constant constants_lst .

    HYPHEN          reduce using rule 48 (constants_lst -> constant constants_lst .)
    RPAREN          reduce using rule 48 (constants_lst -> constant constants_lst .)


state 61

    (8) init_def -> LPAREN INIT_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN
    (42) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (43) ground_predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 72
    NAME            shift and go to state 73


state 62

    (9) init_def -> LPAREN INIT_KEY ground_predicates_lst . RPAREN

    RPAREN          shift and go to state 74


state 63

    (37) ground_predicates_lst -> ground_predicate . ground_predicates_lst
    (38) ground_predicates_lst -> ground_predicate .
    (37) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (38) ground_predicates_lst -> . ground_predicate
    (42) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (43) ground_predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 38 (ground_predicates_lst -> ground_predicate .)
    LPAREN          shift and go to state 76

    ground_predicate               shift and go to state 63
    ground_predicates_lst          shift and go to state 75

state 64

    (10) goal_def -> LPAREN GOAL_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 77


state 65

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .

    $end            reduce using rule 4 (problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .)


state 66

    (21) predicate_def -> LPAREN NAME . typed_variables_lst RPAREN
    (22) predicate_def -> LPAREN NAME . RPAREN
    (46) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (47) typed_variables_lst -> . variables_lst HYPHEN type
    (50) variables_lst -> . VARIABLE variables_lst
    (51) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 79
    VARIABLE        shift and go to state 81

    typed_variables_lst            shift and go to state 78
    variables_lst                  shift and go to state 80

state 67

    (18) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .

    LPAREN          reduce using rule 18 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)


state 68

    (19) predicate_def_lst -> predicate_def predicate_def_lst .

    RPAREN          reduce using rule 19 (predicate_def_lst -> predicate_def predicate_def_lst .)


state 69

    (25) action_def -> LPAREN ACTION_KEY NAME . parameters_def action_def_body RPAREN
    (26) parameters_def -> . PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
    (27) parameters_def -> . PARAMETERS_KEY LPAREN RPAREN

    PARAMETERS_KEY  shift and go to state 83

    parameters_def                 shift and go to state 82

state 70

    (44) typed_constants_lst -> constants_lst HYPHEN type . typed_constants_lst
    (45) typed_constants_lst -> constants_lst HYPHEN type .
    (44) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (45) typed_constants_lst -> . constants_lst HYPHEN type
    (48) constants_lst -> . constant constants_lst
    (49) constants_lst -> . constant
    (55) constant -> . NAME

    RPAREN          reduce using rule 45 (typed_constants_lst -> constants_lst HYPHEN type .)
    NAME            shift and go to state 46

    constants_lst                  shift and go to state 44
    typed_constants_lst            shift and go to state 84
    constant                       shift and go to state 45

state 71

    (54) type -> NAME .

    NAME            reduce using rule 54 (type -> NAME .)
    RPAREN          reduce using rule 54 (type -> NAME .)
    VARIABLE        reduce using rule 54 (type -> NAME .)


state 72

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (37) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (38) ground_predicates_lst -> . ground_predicate
    (42) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (43) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 76

    ground_predicates_lst          shift and go to state 85
    ground_predicate               shift and go to state 63

state 73

    (42) ground_predicate -> LPAREN NAME . constants_lst RPAREN
    (43) ground_predicate -> LPAREN NAME . RPAREN
    (48) constants_lst -> . constant constants_lst
    (49) constants_lst -> . constant
    (55) constant -> . NAME

    RPAREN          shift and go to state 87
    NAME            shift and go to state 46

    constants_lst                  shift and go to state 86
    constant                       shift and go to state 45

state 74

    (9) init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .

    LPAREN          reduce using rule 9 (init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .)


state 75

    (37) ground_predicates_lst -> ground_predicate ground_predicates_lst .

    RPAREN          reduce using rule 37 (ground_predicates_lst -> ground_predicate ground_predicates_lst .)


state 76

    (42) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (43) ground_predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 73


state 77

    (10) goal_def -> LPAREN GOAL_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN

    AND_KEY         shift and go to state 88


state 78

    (21) predicate_def -> LPAREN NAME typed_variables_lst . RPAREN

    RPAREN          shift and go to state 89


state 79

    (22) predicate_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 22 (predicate_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 22 (predicate_def -> LPAREN NAME RPAREN .)


state 80

    (46) typed_variables_lst -> variables_lst . HYPHEN type typed_variables_lst
    (47) typed_variables_lst -> variables_lst . HYPHEN type

    HYPHEN          shift and go to state 90


state 81

    (50) variables_lst -> VARIABLE . variables_lst
    (51) variables_lst -> VARIABLE .
    (50) variables_lst -> . VARIABLE variables_lst
    (51) variables_lst -> . VARIABLE

    HYPHEN          reduce using rule 51 (variables_lst -> VARIABLE .)
    RPAREN          reduce using rule 51 (variables_lst -> VARIABLE .)
    VARIABLE        shift and go to state 81

    variables_lst                  shift and go to state 91

state 82

    (25) action_def -> LPAREN ACTION_KEY NAME parameters_def . action_def_body RPAREN
    (28) action_def_body -> . precond_def effects_def
    (29) precond_def -> . PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN
    (30) precond_def -> . PRECONDITION_KEY literal

    PRECONDITION_KEY shift and go to state 94

    action_def_body                shift and go to state 92
    precond_def                    shift and go to state 93

state 83

    (26) parameters_def -> PARAMETERS_KEY . LPAREN typed_variables_lst RPAREN
    (27) parameters_def -> PARAMETERS_KEY . LPAREN RPAREN

    LPAREN          shift and go to state 95


state 84

    (44) typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .

    RPAREN          reduce using rule 44 (typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .)


state 85

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 96


state 86

    (42) ground_predicate -> LPAREN NAME constants_lst . RPAREN

    RPAREN          shift and go to state 97


state 87

    (43) ground_predicate -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 43 (ground_predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 43 (ground_predicate -> LPAREN NAME RPAREN .)


state 88

    (10) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (37) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (38) ground_predicates_lst -> . ground_predicate
    (42) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (43) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 76

    ground_predicates_lst          shift and go to state 98
    ground_predicate               shift and go to state 63

state 89

    (21) predicate_def -> LPAREN NAME typed_variables_lst RPAREN .

    LPAREN          reduce using rule 21 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)
    RPAREN          reduce using rule 21 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)


state 90

    (46) typed_variables_lst -> variables_lst HYPHEN . type typed_variables_lst
    (47) typed_variables_lst -> variables_lst HYPHEN . type
    (54) type -> . NAME

    NAME            shift and go to state 71

    type                           shift and go to state 99

state 91

    (50) variables_lst -> VARIABLE variables_lst .

    HYPHEN          reduce using rule 50 (variables_lst -> VARIABLE variables_lst .)
    RPAREN          reduce using rule 50 (variables_lst -> VARIABLE variables_lst .)


state 92

    (25) action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body . RPAREN

    RPAREN          shift and go to state 100


state 93

    (28) action_def_body -> precond_def . effects_def
    (31) effects_def -> . EFFECT_KEY LPAREN AND_KEY literals_lst RPAREN
    (32) effects_def -> . EFFECT_KEY literal

    EFFECT_KEY      shift and go to state 102

    effects_def                    shift and go to state 101

state 94

    (29) precond_def -> PRECONDITION_KEY . LPAREN AND_KEY literals_lst RPAREN
    (30) precond_def -> PRECONDITION_KEY . literal
    (35) literal -> . LPAREN NOT_KEY predicate RPAREN
    (36) literal -> . predicate
    (39) predicate -> . LPAREN NAME variables_lst RPAREN
    (40) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (41) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 103

    literal                        shift and go to state 104
    predicate                      shift and go to state 105

state 95

    (26) parameters_def -> PARAMETERS_KEY LPAREN . typed_variables_lst RPAREN
    (27) parameters_def -> PARAMETERS_KEY LPAREN . RPAREN
    (46) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (47) typed_variables_lst -> . variables_lst HYPHEN type
    (50) variables_lst -> . VARIABLE variables_lst
    (51) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 107
    VARIABLE        shift and go to state 81

    typed_variables_lst            shift and go to state 106
    variables_lst                  shift and go to state 80

state 96

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 108


state 97

    (42) ground_predicate -> LPAREN NAME constants_lst RPAREN .

    LPAREN          reduce using rule 42 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)
    RPAREN          reduce using rule 42 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)


state 98

    (10) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 109


state 99

    (46) typed_variables_lst -> variables_lst HYPHEN type . typed_variables_lst
    (47) typed_variables_lst -> variables_lst HYPHEN type .
    (46) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (47) typed_variables_lst -> . variables_lst HYPHEN type
    (50) variables_lst -> . VARIABLE variables_lst
    (51) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 47 (typed_variables_lst -> variables_lst HYPHEN type .)
    VARIABLE        shift and go to state 81

    variables_lst                  shift and go to state 80
    typed_variables_lst            shift and go to state 110

state 100

    (25) action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .

    LPAREN          reduce using rule 25 (action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .)
    RPAREN          reduce using rule 25 (action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .)


state 101

    (28) action_def_body -> precond_def effects_def .

    RPAREN          reduce using rule 28 (action_def_body -> precond_def effects_def .)


state 102

    (31) effects_def -> EFFECT_KEY . LPAREN AND_KEY literals_lst RPAREN
    (32) effects_def -> EFFECT_KEY . literal
    (35) literal -> . LPAREN NOT_KEY predicate RPAREN
    (36) literal -> . predicate
    (39) predicate -> . LPAREN NAME variables_lst RPAREN
    (40) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (41) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 111

    literal                        shift and go to state 112
    predicate                      shift and go to state 105

state 103

    (29) precond_def -> PRECONDITION_KEY LPAREN . AND_KEY literals_lst RPAREN
    (35) literal -> LPAREN . NOT_KEY predicate RPAREN
    (39) predicate -> LPAREN . NAME variables_lst RPAREN
    (40) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (41) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 113
    NOT_KEY         shift and go to state 114
    NAME            shift and go to state 115
    EQUALS          shift and go to state 116


state 104

    (30) precond_def -> PRECONDITION_KEY literal .

    EFFECT_KEY      reduce using rule 30 (precond_def -> PRECONDITION_KEY literal .)


state 105

    (36) literal -> predicate .

    EFFECT_KEY      reduce using rule 36 (literal -> predicate .)
    RPAREN          reduce using rule 36 (literal -> predicate .)
    LPAREN          reduce using rule 36 (literal -> predicate .)


state 106

    (26) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst . RPAREN

    RPAREN          shift and go to state 117


state 107

    (27) parameters_def -> PARAMETERS_KEY LPAREN RPAREN .

    PRECONDITION_KEY reduce using rule 27 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)


state 108

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    LPAREN          reduce using rule 8 (init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 109

    (10) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 118


state 110

    (46) typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .

    RPAREN          reduce using rule 46 (typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .)


state 111

    (31) effects_def -> EFFECT_KEY LPAREN . AND_KEY literals_lst RPAREN
    (35) literal -> LPAREN . NOT_KEY predicate RPAREN
    (39) predicate -> LPAREN . NAME variables_lst RPAREN
    (40) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (41) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 119
    NOT_KEY         shift and go to state 114
    NAME            shift and go to state 115
    EQUALS          shift and go to state 116


state 112

    (32) effects_def -> EFFECT_KEY literal .

    RPAREN          reduce using rule 32 (effects_def -> EFFECT_KEY literal .)


state 113

    (29) precond_def -> PRECONDITION_KEY LPAREN AND_KEY . literals_lst RPAREN
    (33) literals_lst -> . literal literals_lst
    (34) literals_lst -> . literal
    (35) literal -> . LPAREN NOT_KEY predicate RPAREN
    (36) literal -> . predicate
    (39) predicate -> . LPAREN NAME variables_lst RPAREN
    (40) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (41) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 120

    literals_lst                   shift and go to state 121
    literal                        shift and go to state 122
    predicate                      shift and go to state 105

state 114

    (35) literal -> LPAREN NOT_KEY . predicate RPAREN
    (39) predicate -> . LPAREN NAME variables_lst RPAREN
    (40) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (41) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 123

    predicate                      shift and go to state 124

state 115

    (39) predicate -> LPAREN NAME . variables_lst RPAREN
    (41) predicate -> LPAREN NAME . RPAREN
    (50) variables_lst -> . VARIABLE variables_lst
    (51) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 126
    VARIABLE        shift and go to state 81

    variables_lst                  shift and go to state 125

state 116

    (40) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN

    VARIABLE        shift and go to state 127


state 117

    (26) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .

    PRECONDITION_KEY reduce using rule 26 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)


state 118

    (10) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    RPAREN          reduce using rule 10 (goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 119

    (31) effects_def -> EFFECT_KEY LPAREN AND_KEY . literals_lst RPAREN
    (33) literals_lst -> . literal literals_lst
    (34) literals_lst -> . literal
    (35) literal -> . LPAREN NOT_KEY predicate RPAREN
    (36) literal -> . predicate
    (39) predicate -> . LPAREN NAME variables_lst RPAREN
    (40) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (41) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 120

    literals_lst                   shift and go to state 128
    literal                        shift and go to state 122
    predicate                      shift and go to state 105

state 120

    (35) literal -> LPAREN . NOT_KEY predicate RPAREN
    (39) predicate -> LPAREN . NAME variables_lst RPAREN
    (40) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (41) predicate -> LPAREN . NAME RPAREN

    NOT_KEY         shift and go to state 114
    NAME            shift and go to state 115
    EQUALS          shift and go to state 116


state 121

    (29) precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst . RPAREN

    RPAREN          shift and go to state 129


state 122

    (33) literals_lst -> literal . literals_lst
    (34) literals_lst -> literal .
    (33) literals_lst -> . literal literals_lst
    (34) literals_lst -> . literal
    (35) literal -> . LPAREN NOT_KEY predicate RPAREN
    (36) literal -> . predicate
    (39) predicate -> . LPAREN NAME variables_lst RPAREN
    (40) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (41) predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 34 (literals_lst -> literal .)
    LPAREN          shift and go to state 120

    literal                        shift and go to state 122
    literals_lst                   shift and go to state 130
    predicate                      shift and go to state 105

state 123

    (39) predicate -> LPAREN . NAME variables_lst RPAREN
    (40) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (41) predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 115
    EQUALS          shift and go to state 116


state 124

    (35) literal -> LPAREN NOT_KEY predicate . RPAREN

    RPAREN          shift and go to state 131


state 125

    (39) predicate -> LPAREN NAME variables_lst . RPAREN

    RPAREN          shift and go to state 132


state 126

    (41) predicate -> LPAREN NAME RPAREN .

    EFFECT_KEY      reduce using rule 41 (predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 41 (predicate -> LPAREN NAME RPAREN .)
    LPAREN          reduce using rule 41 (predicate -> LPAREN NAME RPAREN .)


state 127

    (40) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN

    VARIABLE        shift and go to state 133


state 128

    (31) effects_def -> EFFECT_KEY LPAREN AND_KEY literals_lst . RPAREN

    RPAREN          shift and go to state 134


state 129

    (29) precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN .

    EFFECT_KEY      reduce using rule 29 (precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN .)


state 130

    (33) literals_lst -> literal literals_lst .

    RPAREN          reduce using rule 33 (literals_lst -> literal literals_lst .)


state 131

    (35) literal -> LPAREN NOT_KEY predicate RPAREN .

    EFFECT_KEY      reduce using rule 35 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    RPAREN          reduce using rule 35 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    LPAREN          reduce using rule 35 (literal -> LPAREN NOT_KEY predicate RPAREN .)


state 132

    (39) predicate -> LPAREN NAME variables_lst RPAREN .

    EFFECT_KEY      reduce using rule 39 (predicate -> LPAREN NAME variables_lst RPAREN .)
    RPAREN          reduce using rule 39 (predicate -> LPAREN NAME variables_lst RPAREN .)
    LPAREN          reduce using rule 39 (predicate -> LPAREN NAME variables_lst RPAREN .)


state 133

    (40) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN

    RPAREN          shift and go to state 135


state 134

    (31) effects_def -> EFFECT_KEY LPAREN AND_KEY literals_lst RPAREN .

    RPAREN          reduce using rule 31 (effects_def -> EFFECT_KEY LPAREN AND_KEY literals_lst RPAREN .)


state 135

    (40) predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .

    EFFECT_KEY      reduce using rule 40 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    RPAREN          reduce using rule 40 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    LPAREN          reduce using rule 40 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)

